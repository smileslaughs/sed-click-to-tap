// Generated by CoffeeScript 1.7.1
(function() {
  var $;

  $ = jQuery;

  $.fn.extend({
    clicktotap: function(options) {
      var settings;
      settings = {
        clickText: "click",
        touchText: "tap",
        ignoreFlag: "sctignore"
      };
      settings = $.extend(settings, options);
      return this.each(function() {
        var arr, changed, el, i, originals, replaceText, supportsTouch, walk, _i, _j, _len, _len1, _results;
        supportsTouch = 'ontouchstart' in document.createElement('div') || navigator.msMaxTouchPoints;
        walk = function(node) {
          var child, next, _results;
          switch (node.nodeType) {
            case 1:
            case 9:
            case 11:
              child = node.firstChild;
              _results = [];
              while (child) {
                next = child.nextSibling;
                walk(child);
                _results.push(child = next);
              }
              return _results;
              break;
            case 3:
              return replaceText(node);
          }
        };
        replaceText = function(textNode) {
          var re, v;
          v = textNode.nodeValue;
          if (supportsTouch) {
            re = new RegExp(settings.clickText, 'gi');
            v = v.replace(re, settings.touchText);
          } else {
            re = new RegExp(settings.touchText, 'gi');
            v = v.replace(re, settings.clickText);
          }
          return textNode.nodeValue = v;
        };
        arr = [];
        originals = this.querySelectorAll('[data-' + settings.ignoreFlag + ']');
        for (_i = 0, _len = originals.length; _i < _len; _i++) {
          el = originals[_i];
          arr.push(el.innerHTML);
        }
        walk(this);
        changed = this.querySelectorAll('[data-' + settings.ignoreFlag + ']');
        _results = [];
        for (i = _j = 0, _len1 = changed.length; _j < _len1; i = ++_j) {
          el = changed[i];
          _results.push(el.innerHTML = arr[i]);
        }
        return _results;
      });
    }
  });

}).call(this);
