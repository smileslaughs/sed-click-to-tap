// Generated by CoffeeScript 1.7.1
(function() {
  var $,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  $ = jQuery;

  $.fn.extend({
    clicktotap: function(options) {
      var settings;
      settings = {
        clickText: "click",
        touchText: "tap",
        ignoreFlag: "sctignore"
      };
      settings = $.extend(settings, options);
      return this.each(function() {
        var element, fixers, supportsTouch, _i, _j, _len, _len1, _results, _results1;
        this.findChildren = function(el, find, replace) {
          var re, textContent;
          textContent = el.innerHTML;
          re = new RegExp(find, "gi");
          if (textContent.match(re)) {
            textContent = textContent.replace(re, replace);
            return el.innerHTML = textContent;
          }
        };
        element = this;
        supportsTouch = __indexOf.call(window, 'ontouchstart') >= 0 || navigator.msMaxTouchPoints;
        console.log(supportsTouch);
        if (supportsTouch) {
          this.findChildren(element, settings.clickText, settings.touchText);
          fixers = this.querySelectorAll('[data-' + settings.ignoreFlag + ']');
          _results = [];
          for (_i = 0, _len = fixers.length; _i < _len; _i++) {
            element = fixers[_i];
            _results.push(this.findChildren(element, settings.clickText, settings.touchText));
          }
          return _results;
        } else {
          this.findChildren(element, settings.touchText, settings.clickText);
          fixers = this.querySelectorAll('[data-' + settings.ignoreFlag + ']');
          _results1 = [];
          for (_j = 0, _len1 = fixers.length; _j < _len1; _j++) {
            element = fixers[_j];
            _results1.push(this.findChildren(element, settings.touchText, settings.clickText));
          }
          return _results1;
        }
      });
    }
  });

}).call(this);
